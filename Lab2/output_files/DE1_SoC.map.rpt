Analysis & Synthesis report for DE1_SoC
Thu Apr 17 18:41:14 2025
Quartus Prime Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Analysis & Synthesis Summary
  3. Analysis & Synthesis Settings
  4. Parallel Compilation
  5. Analysis & Synthesis Source Files Read
  6. Analysis & Synthesis Resource Usage Summary
  7. Analysis & Synthesis Resource Utilization by Entity
  8. General Register Statistics
  9. Multiplexer Restructuring Statistics (Restructuring Performed)
 10. Port Connectivity Checks: "alu_1bit:firstALU|mux8_1:m3"
 11. Post-Synthesis Netlist Statistics for Top Partition
 12. Elapsed Time Per Partition
 13. Analysis & Synthesis Messages
 14. Analysis & Synthesis Suppressed Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.



+-------------------------------------------------------------------------------+
; Analysis & Synthesis Summary                                                  ;
+---------------------------------+---------------------------------------------+
; Analysis & Synthesis Status     ; Successful - Thu Apr 17 18:41:14 2025       ;
; Quartus Prime Version           ; 17.0.0 Build 595 04/25/2017 SJ Lite Edition ;
; Revision Name                   ; DE1_SoC                                     ;
; Top-level Entity Name           ; alu                                         ;
; Family                          ; Cyclone V                                   ;
; Logic utilization (in ALMs)     ; N/A                                         ;
; Total registers                 ; 0                                           ;
; Total pins                      ; 199                                         ;
; Total virtual pins              ; 0                                           ;
; Total block memory bits         ; 0                                           ;
; Total DSP Blocks                ; 0                                           ;
; Total HSSI RX PCSs              ; 0                                           ;
; Total HSSI PMA RX Deserializers ; 0                                           ;
; Total HSSI TX PCSs              ; 0                                           ;
; Total HSSI PMA TX Serializers   ; 0                                           ;
; Total PLLs                      ; 0                                           ;
; Total DLLs                      ; 0                                           ;
+---------------------------------+---------------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Settings                                                                                             ;
+---------------------------------------------------------------------------------+--------------------+--------------------+
; Option                                                                          ; Setting            ; Default Value      ;
+---------------------------------------------------------------------------------+--------------------+--------------------+
; Device                                                                          ; 5CSEMA5F31C6       ;                    ;
; Top-level entity name                                                           ; alu                ; DE1_SoC            ;
; Family name                                                                     ; Cyclone V          ; Cyclone V          ;
; State Machine Processing                                                        ; User-Encoded       ; Auto               ;
; Use smart compilation                                                           ; Off                ; Off                ;
; Enable parallel Assembler and TimeQuest Timing Analyzer during compilation      ; On                 ; On                 ;
; Enable compact report table                                                     ; Off                ; Off                ;
; Restructure Multiplexers                                                        ; Auto               ; Auto               ;
; MLAB Add Timing Constraints For Mixed-Port Feed-Through Mode Setting Don't Care ; Off                ; Off                ;
; Create Debugging Nodes for IP Cores                                             ; Off                ; Off                ;
; Preserve fewer node names                                                       ; On                 ; On                 ;
; OpenCore Plus hardware evaluation                                               ; Enable             ; Enable             ;
; Verilog Version                                                                 ; Verilog_2001       ; Verilog_2001       ;
; VHDL Version                                                                    ; VHDL_1993          ; VHDL_1993          ;
; Safe State Machine                                                              ; Off                ; Off                ;
; Extract Verilog State Machines                                                  ; On                 ; On                 ;
; Extract VHDL State Machines                                                     ; On                 ; On                 ;
; Ignore Verilog initial constructs                                               ; Off                ; Off                ;
; Iteration limit for constant Verilog loops                                      ; 5000               ; 5000               ;
; Iteration limit for non-constant Verilog loops                                  ; 250                ; 250                ;
; Add Pass-Through Logic to Inferred RAMs                                         ; On                 ; On                 ;
; Infer RAMs from Raw Logic                                                       ; On                 ; On                 ;
; Parallel Synthesis                                                              ; On                 ; On                 ;
; DSP Block Balancing                                                             ; Auto               ; Auto               ;
; NOT Gate Push-Back                                                              ; On                 ; On                 ;
; Power-Up Don't Care                                                             ; On                 ; On                 ;
; Remove Redundant Logic Cells                                                    ; Off                ; Off                ;
; Remove Duplicate Registers                                                      ; On                 ; On                 ;
; Ignore CARRY Buffers                                                            ; Off                ; Off                ;
; Ignore CASCADE Buffers                                                          ; Off                ; Off                ;
; Ignore GLOBAL Buffers                                                           ; Off                ; Off                ;
; Ignore ROW GLOBAL Buffers                                                       ; Off                ; Off                ;
; Ignore LCELL Buffers                                                            ; Off                ; Off                ;
; Ignore SOFT Buffers                                                             ; On                 ; On                 ;
; Limit AHDL Integers to 32 Bits                                                  ; Off                ; Off                ;
; Optimization Technique                                                          ; Balanced           ; Balanced           ;
; Carry Chain Length                                                              ; 70                 ; 70                 ;
; Auto Carry Chains                                                               ; On                 ; On                 ;
; Auto Open-Drain Pins                                                            ; On                 ; On                 ;
; Perform WYSIWYG Primitive Resynthesis                                           ; Off                ; Off                ;
; Auto ROM Replacement                                                            ; On                 ; On                 ;
; Auto RAM Replacement                                                            ; On                 ; On                 ;
; Auto DSP Block Replacement                                                      ; On                 ; On                 ;
; Auto Shift Register Replacement                                                 ; Auto               ; Auto               ;
; Allow Shift Register Merging across Hierarchies                                 ; Auto               ; Auto               ;
; Auto Clock Enable Replacement                                                   ; On                 ; On                 ;
; Strict RAM Replacement                                                          ; Off                ; Off                ;
; Allow Synchronous Control Signals                                               ; On                 ; On                 ;
; Force Use of Synchronous Clear Signals                                          ; Off                ; Off                ;
; Auto Resource Sharing                                                           ; Off                ; Off                ;
; Allow Any RAM Size For Recognition                                              ; Off                ; Off                ;
; Allow Any ROM Size For Recognition                                              ; Off                ; Off                ;
; Allow Any Shift Register Size For Recognition                                   ; Off                ; Off                ;
; Use LogicLock Constraints during Resource Balancing                             ; On                 ; On                 ;
; Ignore translate_off and synthesis_off directives                               ; Off                ; Off                ;
; Timing-Driven Synthesis                                                         ; On                 ; On                 ;
; Report Parameter Settings                                                       ; On                 ; On                 ;
; Report Source Assignments                                                       ; On                 ; On                 ;
; Report Connectivity Checks                                                      ; On                 ; On                 ;
; Ignore Maximum Fan-Out Assignments                                              ; Off                ; Off                ;
; Synchronization Register Chain Length                                           ; 3                  ; 3                  ;
; PowerPlay Power Optimization During Synthesis                                   ; Normal compilation ; Normal compilation ;
; HDL message level                                                               ; Level2             ; Level2             ;
; Suppress Register Optimization Related Messages                                 ; Off                ; Off                ;
; Number of Removed Registers Reported in Synthesis Report                        ; 5000               ; 5000               ;
; Number of Swept Nodes Reported in Synthesis Report                              ; 5000               ; 5000               ;
; Number of Inverted Registers Reported in Synthesis Report                       ; 100                ; 100                ;
; Clock MUX Protection                                                            ; On                 ; On                 ;
; Auto Gated Clock Conversion                                                     ; Off                ; Off                ;
; Block Design Naming                                                             ; Auto               ; Auto               ;
; SDC constraint protection                                                       ; Off                ; Off                ;
; Synthesis Effort                                                                ; Auto               ; Auto               ;
; Shift Register Replacement - Allow Asynchronous Clear Signal                    ; On                 ; On                 ;
; Pre-Mapping Resynthesis Optimization                                            ; Off                ; Off                ;
; Analysis & Synthesis Message Level                                              ; Medium             ; Medium             ;
; Disable Register Merging Across Hierarchies                                     ; Auto               ; Auto               ;
; Resource Aware Inference For Block RAM                                          ; On                 ; On                 ;
; Automatic Parallel Synthesis                                                    ; On                 ; On                 ;
; Partial Reconfiguration Bitstream ID                                            ; Off                ; Off                ;
+---------------------------------------------------------------------------------+--------------------+--------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 16          ;
; Maximum allowed            ; 16          ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
+----------------------------+-------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Source Files Read                                                                                                                     ;
+----------------------------------+-----------------+------------------------------+--------------------------------------------------------------+---------+
; File Name with User-Entered Path ; Used in Netlist ; File Type                    ; File Name with Absolute Path                                 ; Library ;
+----------------------------------+-----------------+------------------------------+--------------------------------------------------------------+---------+
; adder_1bit.sv                    ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/adder_1bit.sv ;         ;
; alu.sv                           ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu.sv        ;         ;
; alu_1bit.sv                      ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu_1bit.sv   ;         ;
; isZero.sv                        ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/isZero.sv     ;         ;
; mux2_1.sv                        ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux2_1.sv     ;         ;
; mux4_1.sv                        ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux4_1.sv     ;         ;
; mux8_1.sv                        ; yes             ; User SystemVerilog HDL File  ; C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux8_1.sv     ;         ;
+----------------------------------+-----------------+------------------------------+--------------------------------------------------------------+---------+


+--------------------------------------------------------------+
; Analysis & Synthesis Resource Usage Summary                  ;
+---------------------------------------------+----------------+
; Resource                                    ; Usage          ;
+---------------------------------------------+----------------+
; Estimate of Logic utilization (ALMs needed) ; 166            ;
;                                             ;                ;
; Combinational ALUT usage for logic          ; 242            ;
;     -- 7 input functions                    ; 0              ;
;     -- 6 input functions                    ; 89             ;
;     -- 5 input functions                    ; 25             ;
;     -- 4 input functions                    ; 17             ;
;     -- <=3 input functions                  ; 111            ;
;                                             ;                ;
; Dedicated logic registers                   ; 0              ;
;                                             ;                ;
; I/O pins                                    ; 199            ;
;                                             ;                ;
; Total DSP Blocks                            ; 0              ;
;                                             ;                ;
; Maximum fan-out node                        ; cntrl[0]~input ;
; Maximum fan-out                             ; 138            ;
; Total fan-out                               ; 1253           ;
; Average fan-out                             ; 1.96           ;
+---------------------------------------------+----------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Resource Utilization by Entity                                                                                                                                                                                   ;
+---------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+---------------------------------------------------------------+-------------+--------------+
; Compilation Hierarchy Node      ; Combinational ALUTs ; Dedicated Logic Registers ; Block Memory Bits ; DSP Blocks ; Pins ; Virtual Pins ; Full Hierarchy Name                                           ; Entity Name ; Library Name ;
+---------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+---------------------------------------------------------------+-------------+--------------+
; |alu                            ; 242 (1)             ; 0 (0)                     ; 0                 ; 0          ; 199  ; 0            ; |alu                                                          ; alu         ; work         ;
;    |alu_1bit:firstALU|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:firstALU                                        ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:firstALU|adder_1bit:m2                          ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:firstALU|mux8_1:m3                              ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:firstALU|mux8_1:m3|mux2_1:second_stage          ; mux2_1      ; work         ;
;    |alu_1bit:newALU[10].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[10].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[10].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[10].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[10].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[10].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[11].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[11].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[11].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[11].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[11].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[11].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[12].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[12].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[12].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[12].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[12].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[12].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[13].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[13].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[13].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[13].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[13].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[13].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[14].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[14].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 4 (4)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[14].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[14].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[14].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[15].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[15].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[15].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[15].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[15].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[15].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[16].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[16].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[16].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[16].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[16].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[16].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[17].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[17].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[17].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[17].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[17].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[17].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[18].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[18].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[18].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[18].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[18].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[19].bitalu| ; 6 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[19].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 5 (5)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[19].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[19].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[19].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[1].bitalu|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[1].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[1].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[1].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[1].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[20].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[20].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[20].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[20].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[20].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[20].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[21].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[21].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[21].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[21].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[21].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[21].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[22].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[22].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[22].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[22].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[22].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[22].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[23].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[23].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[23].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[23].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[23].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[23].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[24].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[24].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 4 (4)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[24].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[24].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[24].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[25].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[25].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[25].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[25].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[25].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[25].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[26].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[26].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[26].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[26].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[26].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[26].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[27].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[27].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[27].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[27].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[27].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[27].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[28].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[28].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[28].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[28].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[28].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[29].bitalu| ; 6 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[29].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 5 (5)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[29].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[29].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[29].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[2].bitalu|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[2].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[2].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[2].bitalu|mux2_1:m1                      ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[2].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[2].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[30].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[30].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[30].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[30].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[30].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[30].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[31].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[31].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[31].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[31].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[31].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[31].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[32].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[32].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[32].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[32].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[32].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[32].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[33].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[33].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[33].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[33].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[33].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[33].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[34].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[34].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 4 (4)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[34].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[34].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[34].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[35].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[35].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[35].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[35].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[35].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[35].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[36].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[36].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[36].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[36].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[36].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[36].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[37].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[37].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[37].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[37].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[37].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[37].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[38].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[38].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[38].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[38].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[38].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[39].bitalu| ; 6 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[39].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 4 (4)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[39].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[39].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[39].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[3].bitalu|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[3].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[3].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[3].bitalu|mux2_1:m1                      ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[3].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[3].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[40].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[40].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[40].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[40].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[40].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[40].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[41].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[41].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[41].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[41].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[41].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[41].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[42].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[42].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[42].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[42].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[42].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[43].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[43].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[43].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[43].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[43].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[43].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[44].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[44].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 3 (3)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[44].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[44].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[44].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[44].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[45].bitalu| ; 4 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[45].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[45].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[45].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[45].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[45].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[46].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[46].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[46].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[46].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[46].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[46].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[47].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[47].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[47].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[47].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[47].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[48].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[48].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[48].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[48].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[48].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[48].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[49].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[49].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 3 (3)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[49].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[49].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[49].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[49].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[4].bitalu|  ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[4].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 4 (4)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[4].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[4].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[4].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[50].bitalu| ; 4 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[50].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[50].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[50].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[50].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[50].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[51].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[51].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[51].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[51].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[51].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[51].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[52].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[52].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[52].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[52].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[52].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[53].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[53].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[53].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[53].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[53].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[53].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[54].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[54].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 3 (3)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[54].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[54].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[54].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[54].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[55].bitalu| ; 4 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[55].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[55].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[55].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[55].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[55].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[56].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[56].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[56].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[56].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[56].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[56].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[57].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[57].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[57].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[57].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[57].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[58].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[58].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[58].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[58].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[58].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[58].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[59].bitalu| ; 5 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[59].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 3 (3)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[59].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[59].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[59].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[59].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[5].bitalu|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[5].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[5].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[5].bitalu|mux2_1:m1                      ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[5].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[5].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[60].bitalu| ; 4 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[60].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[60].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[60].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[60].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[60].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[61].bitalu| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[61].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[61].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[61].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[61].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[61].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[62].bitalu| ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[62].bitalu                               ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[62].bitalu|mux2_1:m1                     ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[62].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[62].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[63].bitalu| ; 4 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[63].bitalu                               ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[63].bitalu|adder_1bit:m2                 ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[63].bitalu|mux8_1:m3                     ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[63].bitalu|mux8_1:m3|mux2_1:second_stage ; mux2_1      ; work         ;
;    |alu_1bit:newALU[6].bitalu|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[6].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[6].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[6].bitalu|mux2_1:m1                      ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[6].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[6].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[7].bitalu|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[7].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[7].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[7].bitalu|mux2_1:m1                      ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[7].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[7].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[8].bitalu|  ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[8].bitalu                                ; alu_1bit    ; work         ;
;       |mux2_1:m1|               ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[8].bitalu|mux2_1:m1                      ; mux2_1      ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[8].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[8].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |alu_1bit:newALU[9].bitalu|  ; 6 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[9].bitalu                                ; alu_1bit    ; work         ;
;       |adder_1bit:m2|           ; 5 (5)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[9].bitalu|adder_1bit:m2                  ; adder_1bit  ; work         ;
;       |mux8_1:m3|               ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[9].bitalu|mux8_1:m3                      ; mux8_1      ; work         ;
;          |mux2_1:second_stage|  ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit:newALU[9].bitalu|mux8_1:m3|mux2_1:second_stage  ; mux2_1      ; work         ;
;    |isZero:zeroCheck|           ; 18 (18)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|isZero:zeroCheck                                         ; isZero      ; work         ;
+---------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+---------------------------------------------------------------+-------------+--------------+
Note: For table entries with two numbers listed, the numbers in parentheses indicate the number of resources of the given type used by the specific entity alone. The numbers listed outside of parentheses indicate the total resources of the given type used by the specific entity and all of its sub-entities in the hierarchy.


+------------------------------------------------------+
; General Register Statistics                          ;
+----------------------------------------------+-------+
; Statistic                                    ; Value ;
+----------------------------------------------+-------+
; Total registers                              ; 0     ;
; Number of registers using Synchronous Clear  ; 0     ;
; Number of registers using Synchronous Load   ; 0     ;
; Number of registers using Asynchronous Clear ; 0     ;
; Number of registers using Asynchronous Load  ; 0     ;
; Number of registers using Clock Enable       ; 0     ;
; Number of registers using Preset             ; 0     ;
+----------------------------------------------+-------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Multiplexer Restructuring Statistics (Restructuring Performed)                                                                                                        ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+---------------------------------------------------------+
; Multiplexer Inputs ; Bus Width ; Baseline Area ; Area if Restructured ; Saving if Restructured ; Registered ; Example Multiplexer Output                              ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+---------------------------------------------------------+
; 5:1                ; 64 bits   ; 192 LEs       ; 192 LEs              ; 0 LEs                  ; No         ; |alu|alu_1bit:firstALU|mux8_1:m3|mux2_1:second_stage|OR ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+---------------------------------------------------------+


+---------------------------------------------------------+
; Port Connectivity Checks: "alu_1bit:firstALU|mux8_1:m3" ;
+------+-------+----------+-------------------------------+
; Port ; Type  ; Severity ; Details                       ;
+------+-------+----------+-------------------------------+
; d[7] ; Input ; Info     ; Stuck at GND                  ;
; d[1] ; Input ; Info     ; Stuck at GND                  ;
+------+-------+----------+-------------------------------+


+-----------------------------------------------------+
; Post-Synthesis Netlist Statistics for Top Partition ;
+-----------------------+-----------------------------+
; Type                  ; Count                       ;
+-----------------------+-----------------------------+
; arriav_lcell_comb     ; 243                         ;
;     normal            ; 243                         ;
;         1 data inputs ; 1                           ;
;         2 data inputs ; 74                          ;
;         3 data inputs ; 37                          ;
;         4 data inputs ; 17                          ;
;         5 data inputs ; 25                          ;
;         6 data inputs ; 89                          ;
; boundary_port         ; 199                         ;
;                       ;                             ;
; Max LUT depth         ; 28.00                       ;
; Average LUT depth     ; 19.63                       ;
+-----------------------+-----------------------------+


+-------------------------------+
; Elapsed Time Per Partition    ;
+----------------+--------------+
; Partition Name ; Elapsed Time ;
+----------------+--------------+
; Top            ; 00:00:00     ;
+----------------+--------------+


+-------------------------------+
; Analysis & Synthesis Messages ;
+-------------------------------+
Info: *******************************************************************
Info: Running Quartus Prime Analysis & Synthesis
    Info: Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition
    Info: Processing started: Thu Apr 17 18:41:08 2025
Info: Command: quartus_map --read_settings_files=on --write_settings_files=off DE1_SoC -c DE1_SoC
Info (20030): Parallel compilation is enabled and will use 16 of the 16 processors detected
Info (12021): Found 1 design units, including 1 entities, in source file adder_1bit.sv
    Info (12023): Found entity 1: adder_1bit File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/adder_1bit.sv Line: 3
Info (12021): Found 1 design units, including 1 entities, in source file alu.sv
    Info (12023): Found entity 1: alu File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu.sv Line: 2
Info (12021): Found 1 design units, including 1 entities, in source file alu_1bit.sv
    Info (12023): Found entity 1: alu_1bit File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu_1bit.sv Line: 3
Info (12021): Found 1 design units, including 1 entities, in source file iszero.sv
    Info (12023): Found entity 1: isZero File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/isZero.sv Line: 2
Info (12021): Found 1 design units, including 1 entities, in source file mux2_1.sv
    Info (12023): Found entity 1: mux2_1 File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux2_1.sv Line: 2
Info (12021): Found 1 design units, including 1 entities, in source file mux4_1.sv
    Info (12023): Found entity 1: mux4_1 File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux4_1.sv Line: 1
Info (12021): Found 1 design units, including 1 entities, in source file mux8_1.sv
    Info (12023): Found entity 1: mux8_1 File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux8_1.sv Line: 1
Info (12127): Elaborating entity "alu" for the top level hierarchy
Info (12128): Elaborating entity "alu_1bit" for hierarchy "alu_1bit:firstALU" File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu.sv Line: 12
Info (12128): Elaborating entity "mux2_1" for hierarchy "alu_1bit:firstALU|mux2_1:m1" File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu_1bit.sv Line: 17
Info (12128): Elaborating entity "adder_1bit" for hierarchy "alu_1bit:firstALU|adder_1bit:m2" File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu_1bit.sv Line: 19
Info (12128): Elaborating entity "mux8_1" for hierarchy "alu_1bit:firstALU|mux8_1:m3" File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu_1bit.sv Line: 23
Info (12128): Elaborating entity "mux4_1" for hierarchy "alu_1bit:firstALU|mux8_1:m3|mux4_1:first_stage1" File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/mux8_1.sv Line: 8
Info (12128): Elaborating entity "isZero" for hierarchy "isZero:zeroCheck" File: C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/alu.sv Line: 25
Info (286030): Timing-Driven Synthesis is running
Info (144001): Generated suppressed messages file C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/output_files/DE1_SoC.map.smsg
Info (16010): Generating hard_block partition "hard_block:auto_generated_inst"
    Info (16011): Adding 0 node(s), including 0 DDIO, 0 PLL, 0 transceiver and 0 LCELL
Info (21057): Implemented 441 device resources after synthesis - the final resource count might be different
    Info (21058): Implemented 131 input pins
    Info (21059): Implemented 68 output pins
    Info (21061): Implemented 242 logic cells
Info: Quartus Prime Analysis & Synthesis was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 4850 megabytes
    Info: Processing ended: Thu Apr 17 18:41:14 2025
    Info: Elapsed time: 00:00:06
    Info: Total CPU time (on all processors): 00:00:14


+------------------------------------------+
; Analysis & Synthesis Suppressed Messages ;
+------------------------------------------+
The suppressed messages can be found in C:/Users/Hitesh M/Documents/GitHub/CSE469/Lab2/output_files/DE1_SoC.map.smsg.


